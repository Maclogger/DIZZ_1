@page "/Needle"
@using DIZZ_1.BackEnd.Needle
@using DIZZ_1.Components.Chart
@rendermode InteractiveServer
<div class="d-flex flex-column card bg-dark-subtle p-3 w-25">
    <h3>Buffon's Needle</h3>

    <label class="mt-3">Replication Count</label>
    <input class="form-control" @bind="_replicationCount" min="2" step="10"/>

    <label class="mt-3">Circle Diameter</label>
    <input class="form-control" type="number" @bind="_diameter" min="0" step="0.1"/>

    <label class="mt-3">Needle Length</label>
    <input class="form-control" type="number" @bind="_needleLength" min="0" step="0.1"/>

    <button class="btn btn-primary mt-3" @onclick="Run">Run</button>
</div>


@if (_pi != null)
{
    <div class="card bg-dark-subtle p-3 mt-4 w-25">
        <h5 class="p-0 m-0">Pi approximation: @_pi</h5>
    </div>
}

<RealTimeChart @ref="_chart" Title="Teploty" XAxisLabel="Čas" YAxisLabel="Teplota (°C)" />

@code {
    private double? _pi = null;
    private int _replicationCount = 10;
    private double _needleLength = 5;
    private double _diameter = 10;
    private RealTimeChart? _chart;

    public void Run()
    {
        BuffonNeedle needle = new BuffonNeedle(_diameter, _needleLength, AddRandomPoint, _chart);
        _pi = needle.DoExperiment(_replicationCount);
    }

    private async Task AddRandomPoint(double newPi)
    {
        Console.WriteLine("AddRandomPoint");
        if (_chart is not null)
        {
            await _chart.AddValue(newPi);
        }
    }
}